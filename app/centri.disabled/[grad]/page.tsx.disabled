import { Metadata } from 'next'
import { notFound } from 'next/navigation'
import { client } from '@/lib/sanity'
import { 
  getLocationBySlugQuery, 
  getCentersByCityQuery 
} from '@/lib/sanity/queries/locationQueries'
import { CenterCard } from '@/components/centers/CenterCard'
import { CenterMap } from '@/components/centers/CenterMap'
import { Container } from '@/components/layout/Container'
import { HeroSection } from '@/components/common/HeroSection'
import { PortableText } from '@portabletext/react'
import Link from 'next/link'
import { ArrowLeftIcon, MapPinIcon, PhoneIcon, EnvelopeIcon } from '@heroicons/react/24/outline'

interface Props {
  params: {
    grad: string
  }
}

interface Location {
  _id: string
  name: string
  slug: string
  region: string
  coordinates: {
    lat: number
    lng: number
  }
  description: any[]
  marketAnalysis: {
    marketSize: string
    demandLevel: string
    competition?: string
    priceMultiplier: number
  }
  contactInfo: {
    phone: string
    email: string
    address: string
    workingHours: string
  }
  images: Array<{
    asset: any
    alt: string
    caption?: string
  }>
  centersCount: number
  centers: Center[]
  seo?: {
    title?: string
    description?: string
  }
}

interface Center {
  _id: string
  name: string
  slug: string
  shortName?: string
  status: string
  address: {
    street: string
    city: string
    coordinates: {
      lat: number
      lng: number
    }
  }
  contact: {
    phone: string
    email: string
  }
  programs: string[]
  images: Array<{
    asset: any
    alt: string
  }>
  featured: boolean
}

// Generate metadata for the page
export async function generateMetadata({ params }: Props): Promise<Metadata> {
  const location = await client.fetch<Location | null>(
    getLocationBySlugQuery, 
    { slug: params.grad }
  )

  if (!location) {
    return {
      title: 'Grad nije pronaƒëen - Sreƒáno uƒçenje',
      description: 'Tra≈æeni grad nije pronaƒëen u na≈°oj mre≈æi centara.'
    }
  }

  const title = location.seo?.title || `Centri u ${location.name} - Sreƒáno uƒçenje`
  const description = location.seo?.description || 
    `Pronaƒëite Sreƒáno uƒçenje centre u ${location.name}. ${location.centersCount} ${location.centersCount === 1 ? 'centar' : 'centara'} sa iskusnim edukatorima.`

  return {
    title,
    description,
    keywords: [`centri ${location.name}`, location.name, 'srecno ucenje', location.region],
    openGraph: {
      title,
      description,
      images: location.images?.[0] ? [{
        url: location.images[0].asset.url,
        alt: location.images[0].alt
      }] : []
    }
  }
}

export default async function CityPage({ params }: Props) {
  // Fetch location data
  const location = await client.fetch<Location | null>(
    getLocationBySlugQuery, 
    { slug: params.grad }
  )

  if (!location) {
    notFound()
  }

  // Group centers by status
  const activeCenters = location.centers.filter(center => center.status === 'active')
  const comingSoonCenters = location.centers.filter(center => center.status === 'coming-soon')
  const otherCenters = location.centers.filter(center => 
    !['active', 'coming-soon'].includes(center.status)
  )

  // Map region values to display names
  const regionNames = {
    'vojvodina': 'Vojvodina',
    'belgrade': 'Beograd',
    'sumadija': '≈†umadija i Zapadna Srbija',
    'juzna-srbija': 'Ju≈æna i Istoƒçna Srbija',
    'kosovo': 'Kosovo i Metohija'
  }

  const marketSizeLabels = {
    'large': 'Veliko tr≈æi≈°te',
    'medium': 'Srednje tr≈æi≈°te',
    'small': 'Malo tr≈æi≈°te'
  }

  const demandLabels = {
    'high': 'Visoka potra≈ænja',
    'medium': 'Umerena potra≈ænja',
    'low': 'Niska potra≈ænja'
  }

  return (
    <>
      <HeroSection
        title={`Centri u ${location.name}`}
        subtitle={`${regionNames[location.region]} ‚Ä¢ ${location.centersCount} ${location.centersCount === 1 ? 'centar' : 'centara'}`}
        description={`Otkrijte na≈°e obrazovne centre u ${location.name} i pridru≈æite se zajednici uƒçenika koji veƒá uƒçe na moderan naƒçin.`}
        backgroundImage={location.images?.[0]?.asset}
      />

      <Container className="py-12">
        {/* Breadcrumbs */}
        <nav className="flex items-center text-sm text-gray-600 mb-8">
          <Link 
            href="/centri" 
            className="flex items-center hover:text-blue-600 transition-colors"
          >
            <ArrowLeftIcon className="h-4 w-4 mr-1" />
            Svi centri
          </Link>
          <span className="mx-2">/</span>
          <span className="text-gray-900 font-medium">{location.name}</span>
        </nav>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Main Content */}
          <div className="lg:col-span-2">
            {/* City Description */}
            {location.description && location.description.length > 0 && (
              <div className="bg-white rounded-lg shadow-sm p-6 mb-8">
                <h2 className="text-xl font-semibold mb-4">O gradu {location.name}</h2>
                <div className="prose prose-gray max-w-none">
                  <PortableText value={location.description} />
                </div>
              </div>
            )}

            {/* Map */}
            <div className="bg-white rounded-lg shadow-sm p-6 mb-8">
              <h2 className="text-xl font-semibold mb-4">Lokacije na mapi</h2>
              <div className="h-64 md:h-80 rounded-lg overflow-hidden">
                <CenterMap 
                  centers={location.centers} 
                  center={location.coordinates}
                  zoom={12}
                />
              </div>
            </div>

            {/* Active Centers */}
            {activeCenters.length > 0 && (
              <div className="mb-8">
                <h2 className="text-xl font-semibold mb-6">
                  Aktivni centri
                  <span className="text-sm font-medium text-gray-600 ml-2">
                    ({activeCenters.length})
                  </span>
                </h2>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  {activeCenters.map((center) => (
                    <CenterCard 
                      key={center._id} 
                      center={center} 
                      showCity={false}
                      href={`/centri/${params.grad}/${center.slug}`}
                    />
                  ))}
                </div>
              </div>
            )}

            {/* Coming Soon Centers */}
            {comingSoonCenters.length > 0 && (
              <div className="mb-8">
                <h2 className="text-xl font-semibold mb-6">
                  Uskoro otvaraju
                  <span className="text-sm font-medium text-gray-600 ml-2">
                    ({comingSoonCenters.length})
                  </span>
                </h2>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  {comingSoonCenters.map((center) => (
                    <CenterCard 
                      key={center._id} 
                      center={center} 
                      variant="coming-soon"
                      showCity={false}
                      href={`/centri/${params.grad}/${center.slug}`}
                    />
                  ))}
                </div>
              </div>
            )}

            {/* No Centers Message */}
            {location.centers.length === 0 && (
              <div className="text-center py-12 bg-white rounded-lg shadow-sm">
                <div className="text-gray-400 text-6xl mb-4">üè¢</div>
                <h3 className="text-xl font-semibold mb-2">Trenutno nema centara</h3>
                <p className="text-gray-600 mb-6">
                  U gradu {location.name} trenutno nema aktivnih centara, 
                  ali uskoro ƒáemo mo≈æda otvoriti novi!
                </p>
                <Link 
                  href="/kontakt" 
                  className="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                >
                  Kontaktirajte nas
                </Link>
              </div>
            )}
          </div>

          {/* Sidebar */}
          <div className="lg:col-span-1">
            {/* Contact Info */}
            <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
              <h3 className="text-lg font-semibold mb-4">Kontakt informacije</h3>
              
              {location.contactInfo.address && (
                <div className="flex items-start mb-3">
                  <MapPinIcon className="h-5 w-5 text-gray-400 mr-3 mt-0.5 flex-shrink-0" />
                  <div>
                    <div className="font-medium text-sm">Adresa</div>
                    <div className="text-gray-600 text-sm">
                      {location.contactInfo.address}
                    </div>
                  </div>
                </div>
              )}
              
              {location.contactInfo.phone && (
                <div className="flex items-start mb-3">
                  <PhoneIcon className="h-5 w-5 text-gray-400 mr-3 mt-0.5 flex-shrink-0" />
                  <div>
                    <div className="font-medium text-sm">Telefon</div>
                    <a 
                      href={`tel:${location.contactInfo.phone}`}
                      className="text-blue-600 hover:text-blue-700 text-sm"
                    >
                      {location.contactInfo.phone}
                    </a>
                  </div>
                </div>
              )}
              
              {location.contactInfo.email && (
                <div className="flex items-start mb-3">
                  <EnvelopeIcon className="h-5 w-5 text-gray-400 mr-3 mt-0.5 flex-shrink-0" />
                  <div>
                    <div className="font-medium text-sm">Email</div>
                    <a 
                      href={`mailto:${location.contactInfo.email}`}
                      className="text-blue-600 hover:text-blue-700 text-sm"
                    >
                      {location.contactInfo.email}
                    </a>
                  </div>
                </div>
              )}
              
              {location.contactInfo.workingHours && (
                <div className="text-sm text-gray-600">
                  <div className="font-medium mb-1">Radno vreme:</div>
                  {location.contactInfo.workingHours}
                </div>
              )}
            </div>

            {/* Market Analysis */}
            <div className="bg-white rounded-lg shadow-sm p-6 mb-6">
              <h3 className="text-lg font-semibold mb-4">Informacije o tr≈æi≈°tu</h3>
              
              <div className="space-y-3 text-sm">
                <div className="flex justify-between">
                  <span className="text-gray-600">Veliƒçina tr≈æi≈°ta:</span>
                  <span className="font-medium">
                    {marketSizeLabels[location.marketAnalysis.marketSize]}
                  </span>
                </div>
                
                <div className="flex justify-between">
                  <span className="text-gray-600">Nivo potra≈ænje:</span>
                  <span className="font-medium">
                    {demandLabels[location.marketAnalysis.demandLevel]}
                  </span>
                </div>
                
                {location.marketAnalysis.priceMultiplier !== 1 && (
                  <div className="flex justify-between">
                    <span className="text-gray-600">Cenovni faktor:</span>
                    <span className="font-medium">
                      {location.marketAnalysis.priceMultiplier}x
                    </span>
                  </div>
                )}
              </div>
            </div>

            {/* Quick Actions */}
            <div className="bg-blue-50 rounded-lg p-6">
              <h3 className="text-lg font-semibold mb-4">Zainteresovani ste?</h3>
              <p className="text-sm text-gray-600 mb-4">
                Kontaktirajte nas za vi≈°e informacija o na≈°im programima u {location.name}.
              </p>
              <div className="space-y-2">
                <Link 
                  href="/kontakt"
                  className="block w-full text-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
                >
                  Kontaktiraj nas
                </Link>
                <Link 
                  href="/rezervacija"
                  className="block w-full text-center px-4 py-2 border border-blue-600 text-blue-600 rounded-lg hover:bg-blue-50 transition-colors"
                >
                  Rezervi≈°i termin
                </Link>
              </div>
            </div>
          </div>
        </div>
      </Container>
    </>
  )
}